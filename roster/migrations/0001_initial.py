# Generated by Django 5.2.6 on 2025-09-20 04:29

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('first_name', models.CharField(help_text='Required. 150 characters or fewer. Letters only.', max_length=150, validators=[django.core.validators.RegexValidator(message='Only letters are allowed.', regex='^[A-Za-z]+$')], verbose_name='first_name')),
                ('last_name', models.CharField(help_text='Required. 150 characters or fewer. Letters only.', max_length=150, validators=[django.core.validators.RegexValidator(message='Only letters are allowed.', regex='^[A-Za-z]+$')], verbose_name='last_name')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the player was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when the player was updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when the player was deleted', null=True, verbose_name='deleted at')),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='Required. 150 characters or fewer. Letters only.', max_length=150, validators=[django.core.validators.RegexValidator(message='Only letters are allowed.', regex='^[A-Za-z]+$')], verbose_name='sport_name')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the sport was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when the sport was updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when the sport was deleted', null=True, verbose_name='deleted at')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the favorite was created', verbose_name='created at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='user_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='roster.player', verbose_name='player_id')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('body', models.TextField(verbose_name='body')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the comment was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when the comment was updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when the comment was deleted', null=True, verbose_name='deleted at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='user_id')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='roster.player', verbose_name='player_id')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='Required. 150 characters or fewer. Letters only.', max_length=150, validators=[django.core.validators.RegexValidator(message='Only letters are allowed.', regex='^[A-Za-z]+$')], verbose_name='team_name')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the team was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of when the team was updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp of when the team was deleted', null=True, verbose_name='deleted at')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='roster.sport', verbose_name='sport_id')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='roster.team', verbose_name='team_id'),
        ),
    ]
